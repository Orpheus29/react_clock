{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeChangeTimerId","this","startTimeChangeTimer","prevProps","prevState","name","props","console","debug","info","toUTCString","slice","window","clearInterval","setInterval","setState","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","clockName","nameChangeTimerId","startNameChangeTimer","handleClockVisibilityOn","handleClockVisibilityOff","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"8MAYaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,kBAAoB,EALtB,uDAOE,WACEC,KAAKC,yBART,gCAWE,SACEC,EACAC,GAEID,EAAUE,OAASJ,KAAKK,MAAMD,MAEhCE,QAAQC,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDJ,KAAKK,MAAMD,OAG5DD,EAAUN,QAAUG,KAAKJ,MAAMC,OAEjCS,QAAQE,KAAKR,KAAKJ,MAAMC,MAAMY,cAAcC,OAAO,IAAK,MAtB9D,kCA0BE,WACEC,OAAOC,cAAcZ,KAAKD,qBA3B9B,kCA8BE,WAAwB,IAAD,OACrBC,KAAKD,kBAAoBY,OAAOE,aAAY,WAC1C,EAAKC,SAAS,CAAEjB,MAAO,IAAIC,SA1CP,OAU1B,oBAoCE,WACE,IAAQM,EAASJ,KAAKK,MAAdD,KACAP,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,IAGF,YAED,sBAAMW,UAAU,cAAhB,SACGlB,EAAMY,cAAcC,OAAO,IAAK,YAjD3C,GAA2BM,IAAMC,e,MCDjC,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAGX,IAAMG,EAAb,4MACE1B,MAAe,CACb2B,UAAU,EACVC,UAAW,WAHf,EAMEC,kBAAoB,EANtB,EAoBEC,qBAAuB,WACrB,EAAKD,kBAAoBd,OAAOE,aAAY,WAC1C,EAAKC,SAAS,CAAEU,UAAWN,QAnCP,OAa1B,EA0BES,wBAA0B,kBACxB,EAAKb,SAAS,CAAES,UAAU,KA3B9B,EA8BEK,yBAA2B,SAACC,GAG1B,OAFAA,EAAMC,iBAEC,EAAKhB,SAAS,CAAES,UAAU,KAjCrC,uDAQE,WACEvB,KAAK0B,uBACLK,SAASC,iBAAiB,cAAehC,KAAK4B,0BAC9CG,SAASC,iBAAiB,QAAShC,KAAK2B,2BAX5C,kCAcE,WACEhB,OAAOC,cAAcZ,KAAKyB,mBAC1BM,SAASE,oBAAoB,cAAejC,KAAK4B,0BACjDG,SAASE,oBAAoB,QAASjC,KAAK2B,2BAjB/C,oBAoCE,WACE,MAAgC3B,KAAKJ,MAA7B4B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GACC,cAAC,EAAD,CAAOnB,KAAMoB,WA3CvB,GAAyBR,IAAMC,eCd/BiB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.5c4a8ee3.chunk.js","sourcesContent":["import React from 'react';\n\nconst TIME_CHANGE_DELAY = 1000;\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timeChangeTimerId = 0;\n\n  componentDidMount(): void {\n    this.startTimeChangeTimer();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n    prevState: Readonly<State>,\n  ): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (prevState.today !== this.state.today) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timeChangeTimerId);\n  }\n\n  startTimeChangeTimer() {\n    this.timeChangeTimerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, TIME_CHANGE_DELAY);\n  }\n\n  render(): React.ReactNode {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nconst NAME_CHANGE_DELAY = 3300;\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameChangeTimerId = 0;\n\n  componentDidMount(): void {\n    this.startNameChangeTimer();\n    document.addEventListener('contextmenu', this.handleClockVisibilityOff);\n    document.addEventListener('click', this.handleClockVisibilityOn);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.nameChangeTimerId);\n    document.removeEventListener('contextmenu', this.handleClockVisibilityOff);\n    document.removeEventListener('click', this.handleClockVisibilityOn);\n  }\n\n  startNameChangeTimer = () => {\n    this.nameChangeTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, NAME_CHANGE_DELAY);\n  };\n\n  handleClockVisibilityOn = () => (\n    this.setState({ hasClock: true })\n  );\n\n  handleClockVisibilityOff = (event: MouseEvent) => {\n    event.preventDefault();\n\n    return this.setState({ hasClock: false });\n  };\n\n  render(): React.ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}